{
	"info": {
		"_postman_id": "414f2ac6-8ecf-4723-9750-cdec2da20e3b",
		"name": "Users_Tournaments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31735595"
	},
	"item": [
		{
			"name": "Add a tournament to a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\": \"expert\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add an tournament to a user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"{{tournament_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"username\": \"jngm00\",\r\n    \"role\": \"user\",\r\n    \"tournaments\": [\r\n        {\r\n            \"id\": \"2a6a4ca6-109b-489d-aace-8377c503a992\",\r\n            \"name\": \"TurboBet\",\r\n            \"date\": \"23/04/2025\",\r\n            \"address\": \"Cancha Los Heroes\",\r\n            \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Add an invalid tournament to a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tournament with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid user to a tournament",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The tournament with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Add a tournament to an invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Add a tournament to an invalid user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000",
								"tournaments",
								"{{tournament_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The user with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a tournament from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get an user from a tournament",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"{{tournament_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\r\n    \"id\": \"2a6a4ca6-109b-489d-aace-8377c503a992\",\r\n    \"name\": \"TurboBet\",\r\n    \"date\": \"23/04/2025\",\r\n    \"address\": \"Cancha Los Heroes\",\r\n    \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\r\n}"
				}
			]
		},
		{
			"name": "Get an invalid tournament from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tournament with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid tournament from a user",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The tournament with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a tournament from an invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a tournament from an invalid user",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000",
								"tournaments",
								"{{tournament_id}}"
							]
						}
					},
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The user with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get a tournament not associated to a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tournament with the given id is not associated to the user\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournaments_id2}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"{{tournaments_id2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a tournament not associated to a user",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournaments_id2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"{{tournaments_id2}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The tournament with the given id is not associated to the user\"\n}"
				}
			]
		},
		{
			"name": "Get all tournaments from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments"
					]
				}
			},
			"response": [
				{
					"name": "Get all tournaments from a user",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tournaments/{{tournament_id}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tournaments",
								"{{tournament_id}}",
								"users"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"2cf3518a-eaac-4843-a468-f2ab593ef9e5\",\n        \"category\": \"expert\",\n        \"tournament\": {\n            \"id\": \"036c7600-310b-446f-9cf8-683d49265456\",\n            \"name\": \"TFC Open\",\n            \"date\": \"24/02/2024\",\n            \"address\": \"La Verdieri Club\",\n            \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n        }\n    },\n    {\n        \"id\": \"da5bd9e5-8327-405e-9a62-cee0de2dc0f7\",\n        \"category\": \"expert\",\n        \"tournament\": {\n            \"id\": \"2a6a4ca6-109b-489d-aace-8377c503a992\",\n            \"name\": \"TurboBet\",\n            \"date\": \"23/04/2025\",\n            \"address\": \"Cancha Los Heroes\",\n            \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n        }\n    },\n    {\n        \"id\": \"db2a6b5c-205c-4b82-92b0-7d1bd98f17d2\",\n        \"category\": \"expert\",\n        \"tournament\": {\n            \"id\": \"767d97df-ca52-4a19-830b-a4576c9dc7d5\",\n            \"name\": \"Golf Masters\",\n            \"date\": \"23/04/2025\",\n            \"address\": \"Briceño\",\n            \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n        }\n    }\n]"
				}
			]
		},
		{
			"name": "Get all tournaments from an invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000",
						"tournaments"
					]
				}
			},
			"response": [
				{
					"name": "Get all tournaments from an invalid user",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000",
								"tournaments"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The user with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update tournaments from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"{{tournament_id}}\"\r\n   },\r\n      {\r\n       \"id\": \"{{tournament_id3}}\"\r\n   },\r\n      {\r\n       \"id\": \"{{tournament_id5}}\"\r\n   }\r\n\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments"
					]
				}
			},
			"response": [
				{
					"name": "Update tournaments from a user",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"{{user_id2}}\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": \"796f4341-ecd9-4000-b502-69c408118daf\",\n    \"username\": \"jngm00\",\n    \"role\": \"user\",\n    \"tournaments\": [\n        {\n            \"id\": \"e4db12ea-eb4f-4f5d-baaf-30fd7c29b294\",\n            \"category\": \"intermidiate\",\n            \"tournament\": {\n                \"id\": \"2a6a4ca6-109b-489d-aace-8377c503a992\",\n                \"name\": \"TurboBet\",\n                \"date\": \"23/04/2025\",\n                \"address\": \"Cancha Los Heroes\",\n                \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n            }\n        },\n        {\n            \"id\": \"11b618ec-ca2a-46eb-b05c-aa4ead7161e0\",\n            \"category\": \"intermidiate\",\n            \"tournament\": {\n                \"id\": \"767d97df-ca52-4a19-830b-a4576c9dc7d5\",\n                \"name\": \"Golf Masters\",\n                \"date\": \"23/04/2025\",\n                \"address\": \"Briceño\",\n                \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n            }\n        },\n        {\n            \"id\": \"752c3048-9980-4960-90b9-dab747037087\",\n            \"category\": \"intermidiate\",\n            \"tournament\": {\n                \"id\": \"7a7f2738-0e7f-4257-aacc-ec32355f4ce4\",\n                \"name\": \"Basket Masters\",\n                \"date\": \"23/09/2025\",\n                \"address\": \"Sauzalito\",\n                \"image\": \"https://media.istockphoto.com/id/1455497361/es/foto/pareja-joven-en-cancha-de-tenis-hombre-guapo-y-mujer-atractiva-est%C3%A1n-jugando-al-tenis.jpg?s=1024x1024&w=is&k=20&c=5Oz2FcTQBQZD7tpueMK7zvuqW9Ffy3mDjeOJPxqb62c=\"\n            }\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update invalid tournaments from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"A tournament from the list of tournaments does not exist\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments"
					]
				}
			},
			"response": [
				{
					"name": "Update invalid tournaments from a user",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n   {\r\n       \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n   }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 404,\r\n   \"message\": \"The user with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Update tournaments from an invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{tournament_id}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000",
						"tournaments"
					]
				}
			},
			"response": [
				{
					"name": "Update tournaments from an invalid user",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000",
								"tournaments"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The tournament with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a tournament from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a tournament from a user",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tournaments/{{tournament_id}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tournaments",
								"{{tournament_id}}",
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete a tournament from an invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The user with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"00000000-0000-0000-0000-000000000000",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a tournament from an invalid user",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/00000000-0000-0000-0000-000000000000/tournaments/{{tournament_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"00000000-0000-0000-0000-000000000000",
								"tournaments",
								"{{tournament_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The user with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete an invalid tournament from a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tournament with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid user from a tournament",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users/{{user_id}}/tournaments/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users",
								"{{user_id}}",
								"tournaments",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"name": "Content-Type",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The tournament with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a tournament not associated to a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The tournament does not exist for the given user\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/users/{{user_id}}/tournaments/{{tournament_id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"{{user_id}}",
						"tournaments",
						"{{tournament_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a tournament not associated to a user",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/tournaments/{{tournament_id}}/users/{{user_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"tournaments",
								"{{tournament_id}}",
								"users",
								"{{user_id}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": "{\r\n   \"statusCode\": 412,\r\n   \"message\": \"The user with the given id is not associated to the tournament\"\r\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3001",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "796f4341-ecd9-4000-b502-69c408118daf",
			"type": "string"
		},
		{
			"key": "tournament_id",
			"value": "2a6a4ca6-109b-489d-aace-8377c503a992",
			"type": "string"
		},
		{
			"key": "tournaments_id2",
			"value": "619d32e5-6c26-4930-b33a-1454eebc2c32",
			"type": "string"
		},
		{
			"key": "tournament_id3",
			"value": "767d97df-ca52-4a19-830b-a4576c9dc7d5",
			"type": "string"
		},
		{
			"key": "tournament_id4",
			"value": "7a7f2738-0e7f-4257-aacc-ec32355f4ce4",
			"type": "string"
		},
		{
			"key": "tournament_id5",
			"value": "036c7600-310b-446f-9cf8-683d49265456",
			"type": "string"
		}
	]
}